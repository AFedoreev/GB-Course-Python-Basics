# Эти задачи необходимо решить используя регулярные выражения!

# Задача - 1
# Запросите у пользователя имя, фамилию, email. Теперь необходимо совершить проверки, имя и фамилия должны иметь
# заглавные первые буквы. email - не должен иметь заглавных букв и должен быть в формате: текст в нижнем регистре,
# допускается нижнее подчеркивание и цифры, потом @, потом текст, допускаются цифры, точка, ru или org или com.
# Например:
# Пупкин василий - неверно указано имя, te$T@test.net - неверно указан email (спецсимвол, заглавная буква, .net),
# te_4_st@test.com - верно указан.

import re

print("Задача 2-1.\n")

pattern_name = '(^[A-ZА-Я]{1}[a-zа-я]+$)'
# нагуглил полное совпадение с помощью ^ и $, но позже наткнулся на fullmatch(), менять не стал
pattern_email = '([a-z_0-9]+@[a-z0-9]+\.(ru|org|com))'
name, surname, email = '', '', ''

while not re.match(pattern_name, name):
    name = input('Имя (с заглавной буквы): ')# тут охота поставить .capitalize(), чтоб в проверке отпала необходимость
while not re.match(pattern_name, surname):
    surname = input('Фамилия (с заглавной буквы): ')# и тут
while not re.match(pattern_email, email):
    email = input('E-mail (подсказка [a-z_0-9]+@[a-z0-9]+\.(ru|org|com)): ')# а тут .lower()

print(f'Поздравлем! {name} {surname}: ({email}) вы добровольно подписались на нашу рассылку!')

# Задача - 2:
# Вам дан текст:
print("\nЗадача 2-2.\n")

some_str = '''
Мороз и солнце; день чудесный!
Еще ты дремлешь, друг прелестный —
Пора, красавица, проснись:
Открой сомкнуты негой взоры
Навстречу северной Авроры,
Звездою севера явись!
Вечор, ты помнишь, вьюга злилась,
На мутном небе мгла носилась;
Луна, как бледное пятно,
Сквозь тучи мрачные желтела,
И ты печальная сидела —
А нынче... погляди в окно:
Под голубыми небесами
Великолепными коврами,
Блестя на солнце, снег лежит;
Прозрачный лес один чернеет,
И ель сквозь иней зеленеет,
И речка подо льдом блестит.
Вся комната янтарным блеском
Озарена. Веселым треском
Трещит затопленная печь.
Приятно думать у лежанки.
Но знаешь: не велеть ли в санки
Кобылку бурую запречь?
Скользя по утреннему снегу,
Друг милый, предадимся бегу
Нетерпеливого коня
И навестим поля пустые,
Леса, недавно столь густые,
И берег, милый для меня.'''

# Необходимо с помощью регулярных выражений определить есть ли в тексте подряд
# более одной точки, при любом исходе сообщите результат пользователю!

poem_pattern = '\.\.+'

print(some_str)

if re.findall(poem_pattern, some_str):
    print('\nВ тексте найдено более одной точки подряд')
    for counter, line in enumerate(some_str.split('\n')):
        if re.search(poem_pattern, line):
            line_found = line
            print(f'Срока №{counter}: "{line}"')
else:
    print('\nВ тексте не найдено более одной точки подряд')
